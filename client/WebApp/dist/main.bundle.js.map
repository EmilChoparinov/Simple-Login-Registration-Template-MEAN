{"version":3,"sources":["C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/$_lazy_route_resource lazy","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/app-routing.module.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/app.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/app.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/app.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/app.module.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/classes/user.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/dashboard/dashboard.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/dashboard/dashboard.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/dashboard/dashboard.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/log-reg.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/log-reg.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/log-reg.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/login/login.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/login/login.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/login/login.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/registration/registration.component.css","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/registration/registration.component.html","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/registration/registration.component.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/services/user.service.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/environments/environment.ts","C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","// MODULES\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// COMPONENTS\nimport { LogRegComponent } from './components/log-reg/log-reg.component';\nimport { LoginComponent } from './components/log-reg/login/login.component';\nimport { RegistrationComponent } from './components/log-reg/registration/registration.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: LogRegComponent,\n  },\n  {\n    path: 'dashboard',\n    pathMatch: 'full',\n    component: DashboardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/app.component.ts","// MODULES\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n// COMPONENTS\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/log-reg/login/login.component';\nimport { RegistrationComponent } from './components/log-reg/registration/registration.component';\nimport { LogRegComponent } from './components/log-reg/log-reg.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\n// PROVIDERS\nimport { UserService } from './services/user.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegistrationComponent,\n    LogRegComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/app.module.ts","\n/**\n * base user class that implements base IUser\n */\nexport class User implements IUser {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    confirmPassword: string;\n}\n\n/**\n * base implementation of IUser\n */\nexport interface IUser {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    confirmPassword: string;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/classes/user.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-danger\\\" (click)='logout()'>Logout</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.html\n// module chunks = main","// DEPENDENCIES\nimport { Component, OnInit } from '@angular/core';\n\n// JSON CLASSES & INTERFACES\nimport { IServerMessage } from '../../classes/server-message';\n\n// PROVIDERS\nimport { Router } from '@angular/router';\nimport { UserService } from './../../services/user.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private _router: Router, private _userService: UserService) { }\n\n  ngOnInit() {\n    this._userService.ensureUserIsLoggedIn((res: IServerMessage) => {\n      console.log(res);\n      if (!res.success) {\n        this._router.navigateByUrl('/');\n      }\n    });\n  }\n\n  logout() {\n    this._userService.logoutUser((response) => {\n      this._router.navigate(['']);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/log-reg.component.css\n// module id = ../../../../../src/app/components/log-reg/log-reg.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <app-registration></app-registration>\\n    <app-login></app-login>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/log-reg.component.html\n// module id = ../../../../../src/app/components/log-reg/log-reg.component.html\n// module chunks = main","// DEPENDENCIES\nimport { Component, OnInit } from '@angular/core';\n\n// PROVIDERS\nimport { UserService } from './../../services/user.service';\nimport { Router } from '@angular/router';\n\n// JSON CLASSES & INTERFACES\nimport { ServerMessage } from './../../classes/server-message';\n\n@Component({\n  selector: 'app-log-reg',\n  templateUrl: './log-reg.component.html',\n  styleUrls: ['./log-reg.component.css']\n})\nexport class LogRegComponent implements OnInit {\n\n  constructor(private _userService: UserService, private _router: Router) { }\n\n  ngOnInit() {\n    this._userService.ensureUserIsLoggedIn((res) => {\n\n      // if the user is currently logged in the user should be sent\n      // to the main app\n      if (res.success) {\n        this._router.navigate(['dashboard']);\n      }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/log-reg.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/login/login.component.css\n// module id = ../../../../../src/app/components/log-reg/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col\\\">\\n  <h1 class=\\\"display-3\\\">Login</h1>\\n  <form class=\\\"form-group mt-2\\\">\\n    <label for=\\\"email\\\">Email</label>\\n    <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" required [(ngModel)]='user.email' #email='ngModel'>\\n    <div class=\\\"text-danger\\\" *ngIf='email.errors && email.touched && email.dirty'>\\n      *\\n      <span *ngIf='email.errors.required'>Email is required</span>\\n    </div>\\n    <label for=\\\"password\\\">Password</label>\\n    <input type=\\\"text\\\" name=\\\"password\\\" class=\\\"form-control\\\" required [(ngModel)]='user.password' #password='ngModel'>\\n    <div class=\\\"text-danger\\\" *ngIf='password.errors && password.touched && password.dirty'>\\n      *\\n      <span *ngIf='password.errors.required'>Email is required</span>\\n    </div>\\n    <div class=\\\"text-danger\\\">\\n      <span *ngIf='serverMessage != \\\"\\\"'>*{{serverMessage}}</span>\\n    </div>\\n  </form>\\n  <button class=\\\"btn btn-success float-right\\\" (click)='login()' *ngIf='!(email.errors || password.errors)'>Login</button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/login/login.component.html\n// module id = ../../../../../src/app/components/log-reg/login/login.component.html\n// module chunks = main","// DEPENDENCIES\nimport { Component, OnInit } from '@angular/core';\n\n// PROVIDERS\nimport { UserService } from './../../../services/user.service';\nimport { Router } from '@angular/router';\n\n// JSON CLASSES & INTERFACES\nimport { IUser, User } from '../../../classes/user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user: IUser;\n  serverMessage: string;\n  constructor(private _router: Router, private _userService: UserService) {\n    this.user = new User();\n    this.serverMessage = '';\n  }\n\n  ngOnInit() {\n  }\n\n  login() {\n    console.log('in login');\n    this._userService.loginUser(this.user, (res) => {\n      console.log(res);\n      if (res.success) {\n        this._router.navigate(['dashboard']);\n      } else {\n        this.serverMessage = res.output.message;\n      }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/login/login.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fixed{\\r\\n    width: 363px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/registration/registration.component.css\n// module id = ../../../../../src/app/components/log-reg/registration/registration.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col fixed\\\">\\n    <h1 class=\\\"display-3\\\">Register</h1>\\n    <form class=\\\"form-group ml-2 mt-2\\\">\\n        <label for=\\\"firstName\\\">First Name</label>\\n        <input \\n          class=\\\"form-control\\\"\\n          type=\\\"text\\\" \\n          name=\\\"firstName\\\" \\n          required\\n          minlength=\\\"3\\\"\\n          maxlength=\\\"255\\\"\\n          [(ngModel)]='user.firstName'\\n          #firstName='ngModel'>\\n        <div \\n          class=\\\"text-danger\\\" \\n          *ngIf='firstName.errors && firstName.touched && firstName.dirty'>\\n            *\\n            <span *ngIf='firstName.errors.required'>First name is required</span>\\n            <span *ngIf='firstName.errors.minlength'>First name must be longer than 3 characters</span>\\n        </div>\\n        <label for=\\\"lastName\\\">Last Name</label>\\n        <input \\n        class=\\\"form-control\\\"\\n        type=\\\"text\\\" \\n        name=\\\"lastName\\\" \\n        required\\n        minlength=\\\"3\\\"\\n        maxlength=\\\"255\\\"\\n        [(ngModel)]='user.lastName'\\n        #lastName='ngModel'>\\n        <label for=\\\"email\\\">Email</label>\\n        <div \\n          class=\\\"text-danger\\\" \\n          *ngIf='lastName.errors && lastName.touched && lastName.dirty'>\\n            *\\n            <span *ngIf='lastName.errors.required'>Last name is required</span>\\n            <span *ngIf='lastName.errors.minlength'>Last name must be longer than 3 characters</span>\\n          </div>\\n          <input \\n          class=\\\"form-control\\\"\\n          type=\\\"text\\\" \\n          name=\\\"email\\\" \\n        required\\n        pattern=\\\"[a-zA-Z0-9.+_-]+@[a-zA-Z0-9._-]+\\\\.[a-zA-Z]+$\\\"\\n        maxlength=\\\"255\\\"\\n        [(ngModel)]='user.email'\\n        #email='ngModel'>\\n        <div \\n        class=\\\"text-danger\\\" \\n          *ngIf='email.errors && email.touched && email.dirty'>\\n            *\\n            <span *ngIf='email.errors.required'>Email is required</span>\\n            <span *ngIf='email.errors.pattern'>Email entered is invalid</span>\\n        </div>\\n        <div class=\\\"text-danger\\\">\\n          <span *ngIf='serverMessage != \\\"\\\"'>*{{serverMessage}}</span>\\n        </div>\\n        <label for=\\\"password\\\">Password</label>\\n        <input \\n        class=\\\"form-control\\\"\\n        type=\\\"text\\\" \\n        name=\\\"password\\\" \\n        required\\n        pattern=\\\"^[A-Za-z\\\\d$@$!%*?&]{4,}$\\\"\\n        maxlength=\\\"255\\\"\\n        [(ngModel)]='user.password'\\n        #password='ngModel'>\\n        <div \\n          class=\\\"text-danger\\\" \\n          *ngIf='password.errors && password.touched && password.dirty'>\\n            *\\n            <span *ngIf='password.errors.required'>Password is required</span>\\n            <span *ngIf='password.errors.pattern'>Password entered is invalid</span>\\n        </div>\\n        <label for=\\\"confirmPassword\\\">Confirm Password</label>\\n        <input \\n        class=\\\"form-control\\\"\\n        type=\\\"text\\\" \\n        name=\\\"confirmPassword\\\"\\n        required \\n        pattern=\\\"{{user.password}}\\\"\\n        [(ngModel)]='user.confirmPassword'\\n        #confirmPassword='ngModel'>\\n        <div \\n          class=\\\"text-danger\\\" \\n          *ngIf='confirmPassword.errors && confirmPassword.touched && confirmPassword.dirty'>\\n            *\\n            <span *ngIf='confirmPassword.errors.pattern'>Passwords do not match</span>\\n        </div>\\n      </form>\\n      \\n      <button \\n        (click)='registerUser()' \\n        class=\\\"btn btn-success float-right\\\"\\n        *ngIf='!(firstName.errors || lastName.errors || email.errors || password.errors || confirmPassword.errors)'>Register</button>\\n</div>\\n<!-- {{user | json}} -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/registration/registration.component.html\n// module id = ../../../../../src/app/components/log-reg/registration/registration.component.html\n// module chunks = main","// DEPENDENCIES\nimport { Component, OnInit } from '@angular/core';\n\n// JSON CLASSES & INTERFACES\nimport { ServerMessage, IServerMessage } from './../../../classes/server-message';\nimport { User, IUser } from './../../../classes/user';\n\n// PROVIDERS\nimport { UserService } from './../../../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  user: IUser;\n  serverMessage: string;\n  constructor(private _userService: UserService, private _router: Router) {\n    this.user = new User();\n    this.serverMessage = '';\n  }\n\n  ngOnInit() {\n  }\n\n  registerUser() {\n    this._userService.registerUser(this.user, (res: IServerMessage) => {\n      console.log(res);\n      if (res.success) {\n        this._router.navigateByUrl('/dashboard');\n      } else if (res.output.message) {\n        this.serverMessage = res.output.message;\n      }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/components/log-reg/registration/registration.component.ts","// INJECTIONS\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n// JSON CLASSES & INTERFACES\nimport { ServerMessage, IServerMessage } from './../classes/server-message';\nimport { IUser, User } from '../classes/user';\n\n// SERVICE DEPENDENCIES\nimport * as uriBuilder from 'build-url';\n\n/**\n * User Service class is used to do api classes to the backend\n * Contains User data and other information\n */\n@Injectable()\nexport class UserService {\n\n  /**\n   * base constructor\n   * @param _http injectable\n   */\n  constructor(private _http: HttpClient) { }\n\n\n  /**\n   * build a uri based on the current classes requests\n   * @param query uri query location on local hostname\n   * @returns {string} uri location\n   */\n  private _localAPIBuild(query: string): string {\n    return uriBuilder('', {\n      path: `api/${query}`\n    });\n  }\n\n  /**\n   * queries the backend if the user is currently logged in or not\n   * @param {callback: (res: IServerMessage)} callback callback to run after backend response\n   */\n  ensureUserIsLoggedIn(callback: (res: IServerMessage) => void): void {\n    const uri = this._localAPIBuild('is-logged');\n    this._http.get(uri).subscribe((response: IServerMessage) => callback(response));\n  }\n\n  /**\n   * register a user to the database\n   * @param {IUser} user user data to attempt to add to the database\n   */\n  registerUser(user: IUser, callback: (res: IServerMessage) => void): void {\n    const uri = this._localAPIBuild('register');\n    this._http.post(uri, user).subscribe((response: IServerMessage) => callback(response));\n  }\n\n  /**\n   * login a user to the database\n   * @param user user data to attempt login\n   * @param callback processing to be done after backend response\n   */\n  loginUser(user: IUser, callback: (res: IServerMessage) => void): void {\n    const uri = this._localAPIBuild('login');\n    this._http.post(uri, user).subscribe((response: IServerMessage) => callback(response));\n  }\n\n  logoutUser(callback: (res: IServerMessage) => void): void {\n    const uri = this._localAPIBuild('logout');\n    this._http.get(uri).subscribe((response: IServerMessage) => callback(response));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/app/services/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/emilc/Bots/Dojo/MEAN Stack/MEAN/LoginRegistration/client/WebApp/src/main.ts"],"sourceRoot":"webpack:///"}